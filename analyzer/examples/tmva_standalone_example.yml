# List of input datasets
datasets:
    TT:
        path: ["/home/fynu/swertz/storage/selectedSamples/ttbar_ll_14TeV/ttbar_ll/ttbar_ll_V0_chan_all_weighted.root"]
        # Signal codes:
        # 1 ... will be trained on, considered to be THE signal (give only one! for now...)
        # 0 ... will be trained on, considered to be a background
        # anything else: will not be trained on, but the MVA will be evaluated on this process to split the dataset
        signal: 0
        # Any Root color, with composition (eg. kRed+1):
        color: kRed
        xsection: 19.81 # in pb
        genevents: 1000000
        # Name of the TTree containing the events
        treename: Event
        # Weight under the corresponding hypothesis. If left blank, "otherinputvar" is used as training variables.
        weightname: Weight_TT
        # Formula used to get the event weights from branches in the TTree (can be any TFormula)
        evtweight: GenWeight
    OtG:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OtG1_0/L1_OtG1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kMagenta
        xsection: 11.02
        genevents: 500000
        treename: Event
        weightname: Weight_OtG
        evtweight: GenWeight
    OG:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OG1_0/L1_OG1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kBlue
        xsection: 1.384
        genevents: 500000
        treename: Event
        weightname: Weight_OG
        evtweight: GenWeight
    OC81qq:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC81qq1_0/L1_OC81qq1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kCyan
        xsection: 0.2328
        genevents: 500000
        treename: Event
        weightname: Weight_OC81qq
        evtweight: GenWeight
    OC8ut:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC8ut1_0/L1_OC8ut1_0_V0_chan_all_weighted.root"]
        signal: 1
        color: kGreen
        xsection: 0.1377
        genevents: 500000
        treename: Event
        weightname: Weight_OC8ut
        evtweight: GenWeight

# Analysis: define options relative to the training and the output files

analysis:
    # Name of the analysis
    # TMVA weights file will be name_mvamethod_name.weights.xml 
    name: OC8ut_vs_TTbar
    # Make the outputdir yourself!
    outputdir: results/OC8ut_vs_TTbar/
    # Name of the output root file containing the histograms, TMVA results, ...
    outputname: OC8ut_vs_TTbar
    # Variables used for training (each can be any TFormula!)
    inputvar: [Weight_TT, Weight_OC8ut]
    # Weights common to all the processes, which will be passed to TMVA during training (any TFormula)
    commonweights: GenWeight
    # MLP, BDT or Singleton
    # "Singleton" means no MVA training, only cutting on a single variable
    mvamethod: MLP
    # Used only if MLP
    topology: "3,3"
    # Used by both MLP and BDT. Caution: too many trees and too few input variables can cause problems
    iterations: 200
    # Number of events used for training (= number of events used for testing!)
    trainentries: 3000
    # Will split events so as to keep this efficiency for the signal
    workingpoint: 0.5
    # pb-1
    lumi: 100000
    # Bins in the histos used to draw the ROC curve and find cut value
    histbins: 200
    # Plotbins better be an exact divider of histbins (to be used in the "fancy plot")
    plotbins: 40
    # Low and high edge for all histograms used (will not affect the cut value!)
    # They are set by default to 0 and 1 if MLP or BDT is used
    histLoX: 0
    histHiX: 1
    # Options to control what is to be done and included in the output root file
    # hist: fill TH1's using each process' TMVA output
    # plot: do "fancy" plot with all the histograms
    # ROC:  draw ROC curve
    writeoptions: [plot, hist, ROC]
    # Options to control what files are written at the end
    # result: write "result" file (name defined by "log" option
    # split: write root files for each process, split (bkg/sig-like) according to the mva cut value
    # output: write the root file containing the plot, histograms, ROC, TMVA output, ...
    outputtasks: [result, split, output]
    # Split root files will be of the format (splitname)_(sig/bkg)like_proc_(procname).root
    splitname: OC8ut_vs_TTbar
    # Name of the file containing signal efficiency, background efficiency, and cut value
    log: OC8ut_vs_TTbar.log
