# Datasets:

[proc_0]
path=/home/fynu/swertz/storage/selectedSamples/ttbar_ll_14TeV/ttbar_ll/ttbar_ll_V0_chan_all_weighted.root
name=TT
signal=0
# Types of signal code:
# 0 ... will be trained on, considered to be a background
# 1 ... will be trained on, considered to be THE signal (give only one!)
# anything else: will not be trained on, but the MVA will be evaluated on this process to split the dataset
color=kRed
# pb
xsection=19.81
genevents=1000000
treename=Event

[proc_1]
path=/home/fynu/swertz/storage/selectedSamples/EFT/L1_OtG1_0/L1_OtG1_0_V0_chan_all_weighted.root
name=OtG
signal=-1
color=kMagenta
xsection=11.02
genevents=500000
treename=Event

[proc_2]
path=/home/fynu/swertz/storage/selectedSamples/EFT/L1_OG1_0/L1_OG1_0_V0_chan_all_weighted.root
name=OG
signal=-1
color=kBlue
xsection=1.384
genevents=500000
treename=Event

[proc_3]
path=/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC81qq1_0/L1_OC81qq1_0_V0_chan_all_weighted.root
name=OC81qq
signal=-1
color=kCyan
xsection=0.2328
genevents=500000
treename=Event

[proc_4]
path=/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC8ut1_0/L1_OC8ut1_0_V0_chan_all_weighted.root
name=OC8ut
signal=1
color=kGreen
xsection=0.1377
genevents=500000
treename=Event

# Analysis

[analysis]
name = OC8ut_vs_TTbar
outputdir = results/OC8ut_vs_TTbar/
outputname = OC8ut_vs_TTbar
# variables used for training
inputvar = Weight_TT,Weight_OC8ut
# MLP or BDT
mvamethod = MLP
# used only if MLP. There is always one last hidden layer with one neuron, to normalize the output between 0 and 1.
topology = 3,3
# used by both MLP and BDT. Caution: too many trees and too few input variables will cause problems
iterations = 200
trainentries = 3000
# will split events so as to keep this fraction of the signal:
workingpoint = 0.5
# pb-1
lumi = 100000
genweight=GenWeight
histbins = 200
# plotbins better be an exact divider of histbins
plotbins = 40
writeoptions = plot,hist,ROC
outputtasks = results,split,log
splitname = OC8ut_vs_TTbar
log = OC8ut_vs_TTbar.log
