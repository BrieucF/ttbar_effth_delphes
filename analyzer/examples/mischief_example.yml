# List of input datasets
datasets:
    TT:
        path: ["/home/fynu/swertz/storage/selectedSamples/ttbar_ll_14TeV/ttbar_ll/ttbar_ll_V0_chan_all_weighted.root"]
        # Signal codes:
        # -1 ... Can be used as a signal to train a MVA
        # -2 ... Can be used as a background to train a MVA
        # -3 ... Will not be used for MVA training, but will be evaluated and passed along
        # -4 ... Cannot be evaluated (This code will mainly be used to decide whether the branching process has to be stopped. tmva will NOT check by itself whether this code is present.)
        # 0 ... Will be trained on, considered to be a background (given here for completeness: this code is used by tmva, and using it here might cause the tree-building strategy function to produce unexpected results).
        # 1 ... Will be trained on, considered to be THE signal (given here for completeness: this code is used by tmva, and using it here might cause the tree-building strategy function to produce unexpected results).
        signal: -2
        # Any Root color, with composition (eg. kRed+1):
        color: kRed
        xsection: 19.81 # in pb
        genevents: 1000000
        # Name of the TTree containing the events
        treename: Event
        # Weight under the corresponding hypothesis. If left blank, "otherinputvar" is used as training variables.
        weightname: Weight_TT
        # Formula used to get the event weights from branches in the TTree (ex: GenWeight*BTagScale)
        evtweight: GenWeight
    OtG:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OtG1_0/L1_OtG1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kMagenta
        xsection: 11.02
        genevents: 500000
        treename: Event
        weightname: Weight_OtG
        evtweight: GenWeight
    OG:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OG1_0/L1_OG1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kBlue
        xsection: 1.384
        genevents: 500000
        treename: Event
        weightname: Weight_OG
        evtweight: GenWeight
    OC81qq:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC81qq1_0/L1_OC81qq1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kCyan
        xsection: 0.2328
        genevents: 500000
        treename: Event
        weightname: Weight_OC81qq
        evtweight: GenWeight
    OC8ut:
        path: ["/home/fynu/swertz/storage/selectedSamples/EFT/L1_OC8ut1_0/L1_OC8ut1_0_V0_chan_all_weighted.root"]
        signal: -1
        color: kGreen
        xsection: 0.1377
        genevents: 500000
        treename: Event
        weightname: Weight_OC8ut
        evtweight: GenWeight

# Analysis: define options relative to the tree building (used by driver.py) and the MVA training (used by tmva)
analysis:
    name: firsttry
    outputdir: mischief_mlp
    # Use these variables for training, in addition to the MEM-weights (if given)
    otherinputvars: []
    # Mode: operators or MIS
    mode: operators
    # Weights common to all the processes, which will be passed to TMVA during training
    commonweights: GenWeight
    # MLP or BDT
    mvamethod: MLP
    # Used only if MLP
    topology: [3, 3]
    # Used by both MLP and BDT. Caution: too many decision trees and too few input variables will cause problems
    iterations: 500
    # Number of events used for training (= number of events used for testing!)
    trainentries: 1000
    # Will split events so as to keep (approximately... to improve precision, raise histbins) this fraction of the signal:
    workingpoint: 0.5
    # Consider analysis valid if background fraction < this value (set to 0 if no check needed):
    maxbkgeff: 0.35
    # pb-1
    lumi: 100000
    # Bins in the histos used to draw the ROC curve and find cut value
    histbins: 200
    # Plotbins better be an exact divider of histbins (to be used in the "fancy plot")
    plotbins: 40
    # To be used for the template fit (better be an exact divider of histbins)
    fitbins: 20
    # Min. number of expected events in a bin of any MVA template
    minbincontent: 1
    # Remove analysis results that were found to be non-optimal (true / false)
    removebadana: true
    # Remove from list of signals those that have already been trained against (true / false). NOTE: not yet implemented
    removefrompool: false
    # Stop branching when at least one sample has less MC events than this
    # MUST BE AT LEAST TWICE AS LARGE AS TRAINENTRIES
    minmcevents: 2000
    # If not enough MC events to train a new NN, still keep the previous results if there
    # are at least that many events. Otherwise, stop branching. Set to 0 if no check needed.
    minkeepevents: 500
    # Stop branching when reached level (1=two subsets; 2=four subsets, ...):
    maxlevel: 5
    writeoptions: [plot, hist, ROC]
    outputtasks: [output, result, split]

